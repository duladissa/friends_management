swagger: '2.0'
info:
  description: API definitions
  version: 0.0.1
  title: Friends Management
  license:
    name: Copyright 2019 SPGroup. All rights reserved.
  x-ow-package: default
basePath: /api/v1
consumes:
- application/json
produces:
- application/json
tags:
  - name: friends
schemes:
  - http
  - https
paths:
  /friends/connections:
    post:
      tags:
        - friends
      summary: 1. Create connections between two given users.
      description: 1. As a user, I need an API to create a friend connection between two email addresses.
      operationId: postFriendsConnections
      parameters:
        - name: body
          in: body
          description: Body
          required: true
          schema:
            $ref: "#/definitions/Friends"
        - name: Authorization
          in: header
          description: Authorization
          required: false
          type: string
        - name: Accept-Language
          in: header
          description: 'The languages the client is able to understand, and which locale variant is preferred.'
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SuccessResponse'
        '400':
          description: Bad request
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        '404':
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /friends/connections/list:
    post:
      tags:
        - friends
      summary: 2. Retrieve the friends list for a given user.
      description: 2. As a user, I need an API to retrieve the friends list for an email address.
      operationId: postFriendsConnectionsList
      parameters:
        - name: body
          in: body
          description: Body
          required: true
          schema:
            $ref: "#/definitions/Friend"
        - name: Authorization
          in: header
          description: Authorization
          required: false
          type: string
        - name: Accept-Language
          in: header
          description: 'The languages the client is able to understand, and which locale variant is preferred.'
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/FriendsListResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        '404':
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /friends/common/list:
    post:
      tags:
        - friends
      summary: 3. Retrieve the common friends list for two given user.
      description: 3. As a user, I need an API to retrieve the common friends list between two email addresses.
      operationId: postFriendsCommonList
      parameters:
        - name: body
          in: body
          description: Body
          required: true
          schema:
            $ref: "#/definitions/Friends"
        - name: Authorization
          in: header
          description: Authorization
          required: false
          type: string
        - name: Accept-Language
          in: header
          description: 'The languages the client is able to understand, and which locale variant is preferred.'
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/FriendsListResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        '404':
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /friends/updates/subscribe:
    post:
      tags:
        - friends
      summary: 4. Subscribe to a given users updates.
      description: "4. As a user, I need an API to subscribe to updates from an email address.</br>
      Please note that subscribing to updates is NOT equivalent to adding a friend connection"
      operationId: postFriendsUpdatesSubscribe
      parameters:
        - name: body
          in: body
          description: Body
          required: true
          schema:
            $ref: "#/definitions/SubscribeFriends"
        - name: Authorization
          in: header
          description: Authorization
          required: false
          type: string
        - name: Accept-Language
          in: header
          description: 'The languages the client is able to understand, and which locale variant is preferred.'
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SuccessResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        '404':
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /friends/updates/block:
    post:
      tags:
        - friends
      summary: 5. Block a given users updates.
      description: "5. As a user, I need an API to block updates from an email address.</br>
      Suppose andy@example.com blocks john@example.com:</br>
      <ul>
        <li>if they are connected as friends, then andy will no longer receive notifications from john</li>
        <li>if they are not connected as friends, then no new friends connection can be added</li>
      </ul>
      "
      operationId: postFriendsUpdatesBlock
      parameters:
        - name: body
          in: body
          description: Body
          required: true
          schema:
            $ref: "#/definitions/SubscribeFriends"
        - name: Authorization
          in: header
          description: Authorization
          required: false
          type: string
        - name: Accept-Language
          in: header
          description: 'The languages the client is able to understand, and which locale variant is preferred.'
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SuccessResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        '404':
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /friends/updates/list:
    post:
      tags:
        - friends
      summary: 6. Retrieve all users who can receive updates from given user.
      description: "6. As a user, I need an API to retrieve all email addresses that can receive updates from an email address.</br>
      Eligibility for receiving updates from i.e. john@example.com</br>
      <ul>
        <li>has not blocked updates from john@example.com, and</li>
        <li>at least one of the following:</li>
          <ul>
            <li>has a friend connection with john@example.com</li>
            <li>has subscribed to updates from john@example.com</li>
            <li>has been @mentioned in the update</li>
          </ul>
      </ul>"
      operationId: postFriendsUpdatesList
      parameters:
        - name: body
          in: body
          description: Body
          required: true
          schema:
            $ref: "#/definitions/ReceiveUpdatesFriends"
        - name: Authorization
          in: header
          description: Authorization
          required: false
          type: string
        - name: Accept-Language
          in: header
          description: 'The languages the client is able to understand, and which locale variant is preferred.'
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ReceiveUpdatesFriendsResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        '404':
          description: Not Found.
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  Friends:
    type: object
    properties:
      friends:
        type: array
        description: List of friends.
        items:
          type: string
          description: Friend email address
        example:
          - andy@example.com
          - john@example.com
  Friend:
    type: object
    description: The friend email address.
    properties:
      email:
        type: string
        example: andy@example.com
  SubscribeFriends:
    type: object
    properties:
      target:
        type: string
        description: Target of the subscription.
        example: john@example.com
      requestor:
        type: string
        description: Requestor for the subscription.
        example: andy@example.com
  ReceiveUpdatesFriends:
    type: object
    properties:
      sender:
        type: string
        description: Sender.
        example: john@example.com
      text:
        type: string
        description: Text
        example: Hello World! kate@example.com
  SuccessResponse:
    type: object
    required:
      - success
    properties:
      success:
        type: boolean
        description: success.
  FriendsListResponse:
    type: object
    description: List of friends along with the success.
    required:
      - success
      - friends
    properties:
      success:
        type: boolean
        description: success.
      count:
        type: number
        format: int
        example: 1
        description: success.
      friends:
        type: array
        description: List of friends.
        items:
          type: string
          description: Friend email address
        example:
          - andy@example.com
          - john@example.com
  ReceiveUpdatesFriendsResponse:
    type: object
    description: List of friends along with the success.
    required:
      - success
      - recipients
    properties:
      success:
        type: boolean
        description: success.
      recipients:
        type: array
        description: List of friends.
        items:
          type: string
          description: Friend email address
        example:
          - lisa@example.com
          - kate@example.com
  ErrorResponse:
    type: object
    required:
      - success
    properties:
      type:
        type: string
        x-omitempty: true
        description: The error type.
      success:
        type: boolean
        example: false
        description: success.
      message:
        type: string
        x-omitempty: true
        description: The error message.