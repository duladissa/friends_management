// Code generated by go-swagger; DO NOT EDIT.

package friends

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PostFriendsConnectionsListHandlerFunc turns a function with the right signature into a post friends connections list handler
type PostFriendsConnectionsListHandlerFunc func(PostFriendsConnectionsListParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostFriendsConnectionsListHandlerFunc) Handle(params PostFriendsConnectionsListParams) middleware.Responder {
	return fn(params)
}

// PostFriendsConnectionsListHandler interface for that can handle valid post friends connections list params
type PostFriendsConnectionsListHandler interface {
	Handle(PostFriendsConnectionsListParams) middleware.Responder
}

// NewPostFriendsConnectionsList creates a new http.Handler for the post friends connections list operation
func NewPostFriendsConnectionsList(ctx *middleware.Context, handler PostFriendsConnectionsListHandler) *PostFriendsConnectionsList {
	return &PostFriendsConnectionsList{Context: ctx, Handler: handler}
}

/*PostFriendsConnectionsList swagger:route POST /friends/connections/list friends postFriendsConnectionsList

2. Retrieve the friends list for a given user.

2. As a user, I need an API to retrieve the friends list for an email address.

*/
type PostFriendsConnectionsList struct {
	Context *middleware.Context
	Handler PostFriendsConnectionsListHandler
}

func (o *PostFriendsConnectionsList) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewPostFriendsConnectionsListParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
